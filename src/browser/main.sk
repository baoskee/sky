namespace Browser {
  @entry
  def main {
    var platform Editor.Platform = Platform.new
    var model = Editor.Model.new("<demo>", platform)
    model.setLexer(.SKEW)

    var canvas = _createCanvas(platform)
    canvas.changeFont(12, 10, 16, ["Menlo", "Monaco", "Consolas"])

    var translator = Editor.SemanticToPixelTranslator.new(canvas)
    translator.setTheme(.XCODE)

    var view = Editor.View.new(platform, translator, model)
    view.changePadding(5, 5, 5, 5)
    view.changeMarginPadding(15, 5)
    canvas.setView(view)

    on(window, "focus", e => {
      canvas.focusKeyboardInput
      canvas.avoidChromeBugOnWindowFocus
    })

    canvas.stretchToFitElement(document.body)
    canvas.focusKeyboardInput

    var tick fn() = => {
      canvas.tick
      dynamic.requestAnimationFrame(tick)
    }
    tick()
  }

  def _createCanvas(platform Editor.Platform) CanvasElement {
    var shortcuts = Editor.ShortcutMap.new(platform)

    # Attempt to use WebGL first because it's a lot faster
    try {
      # TODO: This isn't fully working yet
      # return CanvasElementWebGL.new(platform, shortcuts)
    }

    # Fall back to the 2D canvas API
    return CanvasElement2D.new(platform, shortcuts)
  }
}
