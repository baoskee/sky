namespace Browser {
  class BrowserTime :: Editor.Time {
    def nowInSeconds double {
      return dynamic.performance.now() / 1000
    }
  }

  interface AnimationLoopObserver {
    def tick
  }

  class AnimationLoop {
    var _platform Platform
    var _observers List<AnimationLoopObserver> = []
    var _isRunning = false

    def isRunning bool {
      return _isRunning
    }

    def start {
      if !isRunning {
        _platform.setAnimationFrameCallback(=> {
          for observer in _observers {
            observer.tick
          }
        })
        _isRunning = true
      }
    }

    def stop {
      if isRunning {
        _platform.setAnimationFrameCallback(null)
        _isRunning = false
      }
    }

    def addObserver(observer AnimationLoopObserver) {
      _observers.appendOne(observer)
    }

    def removeObserver(observer AnimationLoopObserver) {
      _observers.removeOne(observer)
    }
  }
}
