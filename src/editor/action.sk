namespace Editor {
  enum Action {
    NONE

    CUT
    COPY
    PASTE
    UNDO
    REDO

    SELECT_ALL
    SELECT_BREAK_INTO_LINES
    SELECT_EXPAND_TO_LINE
    SELECT_FIRST_REGION
    SELECT_NEXT_DIAGNOSTIC
    SELECT_PREVIOUS_DIAGNOSTIC
    SELECT_TOGGLE

    INSERT_CURSOR_ABOVE
    INSERT_CURSOR_BELOW
    INSERT_LINE_ABOVE
    INSERT_LINE_BELOW
    INSERT_TAB_BACKWARD
    INSERT_TAB_FORWARD

    SCROLL_DOWN_DOCUMENT
    SCROLL_DOWN_LINE
    SCROLL_UP_DOCUMENT
    SCROLL_UP_LINE

    MOVE_DOWN_DOCUMENT
    MOVE_DOWN_LINE
    MOVE_DOWN_PAGE
    MOVE_LEFT_CHARACTER
    MOVE_LEFT_LINE
    MOVE_LEFT_WORD
    MOVE_RIGHT_CHARACTER
    MOVE_RIGHT_LINE
    MOVE_RIGHT_WORD
    MOVE_UP_DOCUMENT
    MOVE_UP_LINE
    MOVE_UP_PAGE

    SELECT_DOWN_DOCUMENT
    SELECT_DOWN_LINE
    SELECT_DOWN_PAGE
    SELECT_LEFT_CHARACTER
    SELECT_LEFT_LINE
    SELECT_LEFT_WORD
    SELECT_RIGHT_CHARACTER
    SELECT_RIGHT_LINE
    SELECT_RIGHT_WORD
    SELECT_UP_DOCUMENT
    SELECT_UP_LINE
    SELECT_UP_PAGE

    DELETE_DOWN_DOCUMENT
    DELETE_DOWN_LINE
    DELETE_DOWN_PAGE
    DELETE_LEFT_CHARACTER
    DELETE_LEFT_LINE
    DELETE_LEFT_WORD
    DELETE_RIGHT_CHARACTER
    DELETE_RIGHT_LINE
    DELETE_RIGHT_WORD
    DELETE_UP_DOCUMENT
    DELETE_UP_LINE
    DELETE_UP_PAGE

    def isMoveMotion bool {
      return self >= MOVE_DOWN_DOCUMENT && self <= MOVE_UP_PAGE
    }

    def isSelectMotion bool {
      return self >= SELECT_DOWN_DOCUMENT && self <= SELECT_UP_PAGE
    }

    def isDeleteMotion bool {
      return self >= DELETE_DOWN_DOCUMENT && self <= DELETE_UP_PAGE
    }
  }
}
